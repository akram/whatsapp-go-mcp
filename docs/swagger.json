{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A WhatsApp MCP (Model Context Protocol) server providing WhatsApp functionality",
        "title": "WhatsApp MCP Server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/list-messages": {
            "post": {
                "description": "Retrieve messages from a specific WhatsApp chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "List messages from a chat",
                "parameters": [
                    {
                        "description": "List messages request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ListMessagesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/search-contacts": {
            "post": {
                "description": "Search for WhatsApp contacts by name or phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Search for contacts",
                "parameters": [
                    {
                        "description": "Search contacts request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SearchContactsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contacts",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/send-message": {
            "post": {
                "description": "Send a message to a WhatsApp contact or group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Send a WhatsApp message",
                "parameters": [
                    {
                        "description": "Send message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message sent confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/send-voice-note": {
            "post": {
                "description": "Upload and send an audio file as a WhatsApp voice message",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Send a voice note via WhatsApp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipient JID",
                        "name": "recipient",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Audio file (.ogg opus format)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voice note sent successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SendVoiceNoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Establishes a Server-Sent Events connection for real-time MCP communication",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "Server-Sent Events endpoint for MCP communication",
                "responses": {
                    "200": {
                        "description": "SSE connection established",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the current health status of the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Server is healthy",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/sse": {
            "get": {
                "description": "Establishes a Server-Sent Events connection for real-time MCP communication",
                "consumes": [
                    "text/event-stream"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "Server-Sent Events endpoint for MCP communication",
                "responses": {
                    "200": {
                        "description": "SSE connection established",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tools": {
            "get": {
                "description": "Returns a list of all available MCP tools with their schemas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "List available MCP tools",
                "responses": {
                    "200": {
                        "description": "List of available tools",
                        "schema": {
                            "$ref": "#/definitions/tools.ToolsResponse"
                        }
                    }
                }
            }
        },
        "/tools/{tool_name}/execute": {
            "post": {
                "description": "Execute any available MCP tool with the provided parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Execute a specific MCP tool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the tool to execute",
                        "name": "tool_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tool execution request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ExecuteToolRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tool execution result",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExecuteToolResponse"
                        }
                    },
                    "404": {
                        "description": "Tool not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Tool execution error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ExecuteToolRequest": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "handlers.ExecuteToolResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "result": {},
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "tool_name": {
                    "type": "string",
                    "example": "search_contacts"
                }
            }
        },
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "time": {
                    "type": "string",
                    "example": "2025-09-24T23:56:42+02:00"
                }
            }
        },
        "handlers.SendVoiceNoteResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "filename": {
                    "type": "string",
                    "example": "voice_note.ogg"
                },
                "recipient": {
                    "type": "string",
                    "example": "1234567890@s.whatsapp.net"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-09-25T00:50:40+02:00"
                }
            }
        },
        "main.ListMessagesRequest": {
            "type": "object",
            "properties": {
                "chat_jid": {
                    "type": "string",
                    "example": "1234567890@s.whatsapp.net"
                },
                "limit": {
                    "type": "integer",
                    "example": 50
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "main.SearchContactsRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "example": "John"
                }
            }
        },
        "main.SendMessageRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Hello World"
                },
                "recipient": {
                    "type": "string",
                    "example": "1234567890@s.whatsapp.net"
                }
            }
        },
        "tools.Tool": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Search for contacts by name or phone number"
                },
                "inputSchema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "example": "search_contacts"
                }
            }
        },
        "tools.ToolsResponse": {
            "type": "object",
            "properties": {
                "tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tools.Tool"
                    }
                }
            }
        }
    }
}